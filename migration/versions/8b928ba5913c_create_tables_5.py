"""create tables_5

Revision ID: 8b928ba5913c
Revises: fc578d51ec29
Create Date: 2023-10-28 18:11:12.805763

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8b928ba5913c'
down_revision: Union[str, None] = 'fc578d51ec29'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_moves_id', table_name='moves')
    op.drop_table('moves')
    op.drop_index('ix_pokemoves_id', table_name='pokemoves')
    op.drop_table('pokemoves')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_quiz answers_id', table_name='quiz answers')
    op.drop_table('quiz answers')
    op.drop_index('ix_quizzes_id', table_name='quizzes')
    op.drop_table('quizzes')
    op.drop_index('ix_pokemons_id', table_name='pokemons')
    op.drop_table('pokemons')
    op.drop_index('ix_quiz choices_id', table_name='quiz choices')
    op.drop_table('quiz choices')
    op.drop_index('ix_challenges_id', table_name='challenges')
    op.drop_table('challenges')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('challenges',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('challenges_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('is_answered', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='challenges_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='challenges_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_challenges_id', 'challenges', ['id'], unique=False)
    op.create_table('quiz choices',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"quiz choices_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('quiz_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('move_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['move_id'], ['moves.id'], name='quiz choices_move_id_fkey'),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], name='quiz choices_quiz_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='quiz choices_pkey')
    )
    op.create_index('ix_quiz choices_id', 'quiz choices', ['id'], unique=False)
    op.create_table('pokemons',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('pokemons_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type_id_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type_id_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('img_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('shiny_img_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['type_id_1'], ['types.id'], name='pokemons_type_id_1_fkey'),
    sa.ForeignKeyConstraint(['type_id_2'], ['types.id'], name='pokemons_type_id_2_fkey'),
    sa.PrimaryKeyConstraint('id', name='pokemons_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_pokemons_id', 'pokemons', ['id'], unique=False)
    op.create_table('quizzes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('quizzes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('challenge_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pokemon_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], name='quizzes_challenge_id_fkey'),
    sa.ForeignKeyConstraint(['pokemon_id'], ['pokemons.id'], name='quizzes_pokemon_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='quizzes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_quizzes_id', 'quizzes', ['id'], unique=False)
    op.create_table('quiz answers',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"quiz answers_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('quiz_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('move_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['move_id'], ['moves.id'], name='quiz answers_move_id_fkey'),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], name='quiz answers_quiz_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='quiz answers_pkey')
    )
    op.create_index('ix_quiz answers_id', 'quiz answers', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('api_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('refresh_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('api_token', name='users_api_token_key'),
    sa.UniqueConstraint('refresh_token', name='users_refresh_token_key')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('pokemoves',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('Pokemon_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('move_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('learn_probability', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('can_learn', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['Pokemon_id'], ['pokemons.id'], name='pokemoves_Pokemon_id_fkey'),
    sa.ForeignKeyConstraint(['move_id'], ['moves.id'], name='pokemoves_move_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pokemoves_pkey')
    )
    op.create_index('ix_pokemoves_id', 'pokemoves', ['id'], unique=False)
    op.create_table('moves',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pp', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['types.id'], name='moves_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='moves_pkey')
    )
    op.create_index('ix_moves_id', 'moves', ['id'], unique=False)
    # ### end Alembic commands ###
